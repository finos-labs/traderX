apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: position-service
  name: position-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-service
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: position-service
    spec:
      containers:
        - name: position-service
          env:
            - name: DATABASE_TCP_HOST
              value: database
            - name: POSITION_SERVICE_PORT
              value: "18090"
          image: ghcr.io/finos/traderx/position-service
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 18090
              protocol: TCP
          workingDir: /position-service
          
          # Liveness Probe: Checks if the container is alive
          livenessProbe:
            httpGet:
              path: /health/alive          # The endpoint for the liveness probe
              port: 18090              # Port to hit on the container
            initialDelaySeconds: 10    # Delay before starting the probe after the container starts
            periodSeconds: 10          # How often to run the probe (every 10 seconds)
            timeoutSeconds: 5          # Timeout for the probe to respond
            failureThreshold: 3        # If it fails 3 times, restart the container

          # Readiness Probe: Checks if the container is ready to serve traffic
          readinessProbe:
            httpGet:
              path: /health/ready             # The endpoint for the readiness probe
              port: 18090               # Port to hit on the container
            initialDelaySeconds: 5      # Delay before starting the probe after the container starts
            periodSeconds: 5            # How often to run the probe (every 5 seconds)
            timeoutSeconds: 5           # Timeout for the probe to respond
            successThreshold: 1         # Minimum number of successful probes to mark it as ready
            failureThreshold: 3         # If it fails 3 times, the pod is marked as unready

      restartPolicy: Always

